Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(193,3)
   remark #15382: vectorization support: call to function timestep(const t_param, t_speed *, t_speed *, int *) cannot be vectorized   [ d2q9-bgk.c(195,19) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at d2q9-bgk.c(738,3) inlined into d2q9-bgk.c(219,41)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(740,5) inlined into d2q9-bgk.c(219,41)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(740,5) inlined into d2q9-bgk.c(219,41)
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.375
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15454: masked aligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 20 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 182 
      remark #15477: vector loop cost: 74.000 
      remark #15478: estimated potential speedup: 2.400 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(740,5) inlined into d2q9-bgk.c(219,41)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: timestep(const t_param, t_speed *, t_speed *, int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(245,3)
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(259,7) ]
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(259,7) ]
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(260,7) ]
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(260,7) ]
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(261,7) ]
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(261,7) ]
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(262,7) ]
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(262,7) ]
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(263,7) ]
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(263,7) ]
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(264,7) ]
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(264,7) ]
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(259,7) ]
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(261,7) ]
   remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(264,7) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.410
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 13 
   remark #15449: unmasked aligned unit stride stores: 6 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 48 
   remark #15477: vector loop cost: 17.370 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at d2q9-bgk.c(245,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at d2q9-bgk.c(270,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(279,5)
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(295,9) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(295,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(296,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(297,9) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(297,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(298,9) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(298,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(299,9) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(299,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(300,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(301,9) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(301,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(302,9) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(302,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(303,9) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(308,37) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(309,37) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(310,37) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(312,37) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(313,37) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(316,37) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(363,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(364,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(365,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(366,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(367,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(368,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(369,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(370,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(371,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(372,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(373,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(374,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(375,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(376,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(377,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(378,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(379,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(380,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(390,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(390,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(390,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(390,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(390,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(390,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(398,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(398,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(398,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(398,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(398,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(398,18) ]
      remark #15328: vectorization support: gather was emulated for the variable cells: masked, indirect access    [ d2q9-bgk.c(296,46) ]
      remark #15328: vectorization support: gather was emulated for the variable cells: masked, indirect access    [ d2q9-bgk.c(300,46) ]
      remark #15328: vectorization support: gather was emulated for the variable cells: masked, indirect access    [ d2q9-bgk.c(303,46) ]
      remark #15328: vectorization support: gather was emulated for the variable cells: masked, indirect access    [ d2q9-bgk.c(311,37) ]
      remark #15328: vectorization support: gather was emulated for the variable cells: masked, indirect access    [ d2q9-bgk.c(314,37) ]
      remark #15328: vectorization support: gather was emulated for the variable cells: masked, indirect access    [ d2q9-bgk.c(315,37) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.161
      remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 3 
      remark #15454: masked aligned unit stride loads: 31 
      remark #15455: masked aligned unit stride stores: 18 
      remark #15462: unmasked indexed (or gather) loads: 6 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 557 
      remark #15477: vector loop cost: 287.500 
      remark #15478: estimated potential speedup: 1.900 
      remark #15482: vectorized math library calls: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(279,5)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(279,5)
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(295,9) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(295,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(296,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(297,9) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(297,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(298,9) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(298,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(299,9) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(299,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(300,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(301,9) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(301,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(302,9) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(302,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(303,9) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(308,37) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(309,37) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(310,37) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(312,37) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(313,37) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(316,37) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(363,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(364,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(365,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(366,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(367,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(368,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(369,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(370,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(371,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(372,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(373,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(374,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(375,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(376,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(377,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(378,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(379,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(380,9) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(390,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(390,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(390,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(390,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(390,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(390,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(398,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(398,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(398,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(398,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(398,18) ]
      remark #15388: vectorization support: reference tmp_cells has aligned access   [ d2q9-bgk.c(398,18) ]
      remark #15328: vectorization support: gather was emulated for the variable cells: masked, indirect access    [ d2q9-bgk.c(296,46) ]
      remark #15328: vectorization support: gather was emulated for the variable cells: masked, indirect access    [ d2q9-bgk.c(300,46) ]
      remark #15328: vectorization support: gather was emulated for the variable cells: masked, indirect access    [ d2q9-bgk.c(303,46) ]
      remark #15328: vectorization support: gather was emulated for the variable cells: masked, indirect access    [ d2q9-bgk.c(311,37) ]
      remark #15328: vectorization support: gather was emulated for the variable cells: masked, indirect access    [ d2q9-bgk.c(314,37) ]
      remark #15328: vectorization support: gather was emulated for the variable cells: masked, indirect access    [ d2q9-bgk.c(315,37) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.161
      remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 3 
      remark #15454: masked aligned unit stride loads: 31 
      remark #15455: masked aligned unit stride stores: 18 
      remark #15462: unmasked indexed (or gather) loads: 6 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 556 
      remark #15477: vector loop cost: 287.500 
      remark #15478: estimated potential speedup: 1.900 
      remark #15482: vectorized math library calls: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(279,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: write_values(const t_param, t_speed *, int *, float *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(645,3)
   remark #15523: loop was not vectorized: loop control variable jj was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at d2q9-bgk.c(647,5)
      remark #15523: loop was not vectorized: loop control variable ii was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(705,3)
   remark #15523: loop was not vectorized: loop control variable ii was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: calc_reynolds(const t_param, t_speed *, int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(738,3) inlined into d2q9-bgk.c(600,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(740,5) inlined into d2q9-bgk.c(600,10)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(740,5) inlined into d2q9-bgk.c(600,10)
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.375
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15454: masked aligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 20 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 182 
      remark #15477: vector loop cost: 74.000 
      remark #15478: estimated potential speedup: 2.400 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(740,5) inlined into d2q9-bgk.c(600,10)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: total_density(const t_param, t_speed *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(607,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(609,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(609,5)
      remark #15389: vectorization support: reference cells has unaligned access   [ d2q9-bgk.c(620,7) ]
      remark #15389: vectorization support: reference cells has unaligned access   [ d2q9-bgk.c(620,7) ]
      remark #15389: vectorization support: reference cells has unaligned access   [ d2q9-bgk.c(620,7) ]
      remark #15389: vectorization support: reference cells has unaligned access   [ d2q9-bgk.c(620,7) ]
      remark #15389: vectorization support: reference cells has unaligned access   [ d2q9-bgk.c(620,7) ]
      remark #15389: vectorization support: reference cells has unaligned access   [ d2q9-bgk.c(620,7) ]
      remark #15389: vectorization support: reference cells has unaligned access   [ d2q9-bgk.c(620,7) ]
      remark #15389: vectorization support: reference cells has unaligned access   [ d2q9-bgk.c(620,7) ]
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(620,7) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.473
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 8 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 70 
      remark #15477: vector loop cost: 9.250 
      remark #15478: estimated potential speedup: 6.870 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(609,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: av_velocity(const t_param, t_speed *, int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(738,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(740,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(740,5)
      remark #15388: vectorization support: reference cells has aligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(757,9) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(766,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15389: vectorization support: reference local_density has unaligned access   [ d2q9-bgk.c(774,24) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.375
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15454: masked aligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 20 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 182 
      remark #15477: vector loop cost: 74.000 
      remark #15478: estimated potential speedup: 2.400 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(740,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(509,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between cells_ptr line 514 and cells_ptr line 524
   remark #15346: vector dependence: assumed OUTPUT dependence between cells_ptr line 524 and cells_ptr line 514

   LOOP BEGIN at d2q9-bgk.c(511,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between cells_ptr line 514 and cells_ptr line 524
      remark #15346: vector dependence: assumed OUTPUT dependence between cells_ptr line 524 and cells_ptr line 514
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(529,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(531,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at d2q9-bgk.c(531,5)
         remark #15389: vectorization support: reference obstacles_ptr has unaligned access   [ d2q9-bgk.c(533,9) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 4
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 5 
         remark #15477: vector loop cost: 1.500 
         remark #15478: estimated potential speedup: 3.070 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(531,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(547,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================
